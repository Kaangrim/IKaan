<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
  namespace="IKaan.Was.Core.SqlMaps"
  xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

	<statements>
		<select id="GetLoginUser" parameterClass="DataMap" resultClass="UMLoginUser" >
			<![CDATA[         
				SELECT	ID			as UserId
				  ,     UserName
				  ,     LoginId
				  ,     UseYn
				  ,     PwdCompare(#Password#, Password) as IsPwCheck
				FROM	dbo.AAUser
				WHERE	LoginId = #LoginId#
			]]>			
		</select>
		<insert id="InsertLoginLog" parameterClass="DataMap" >
			<![CDATA[ 
				INSERT INTO dbo.AALoginLog
				( 
					CreateDate, CreateBy, CreateByName,
					UserId, LoginId, Version, MainSkin, GridSkin, IpAddress, MacAddress, Status
				)
				VALUES
				( 
					GetDate(), #CreateBy#, #CreateByName#,
					#UserId#, #LoginId#, #Version#, #MainSkin#, #GridSkin#, #IpAddress#, #MacAddress#, '0'
				)
			]]>
		</insert>
		<update id="UpdateLogout" parameterClass="DataMap">
			<![CDATA[
				UPDATE	dbo.AALoginLog
				SET		UpdateDate	= GetDate()
					,	UpdateBy	= #UpdateBy#
					,	UpdateByName= #UpdateByName#
				WHERE	UserID		= #UserID#
				AND		MacAddress	= #MacAddress#
				AND		UpdateDate	IS NULL
			]]>			
		</update>
		<select id="GetMainMenu" parameterClass="DataMap" resultClass="UMMainMenu">
			<![CDATA[
				WITH MenuList (MenuID, MenuLevel, HierID) AS 
				(
					SELECT	AA.ID			AS MenuID
						,	1				AS MenuLevel
						,	CAST(RIGHT('0000' + 
								CONVERT(VARCHAR, 
									ROW_NUMBER() OVER (ORDER BY AA.SortOrder, AA.ID)), 4) AS VARCHAR(MAX))	as HierID
					FROM	dbo.AAMenu AA WITH (NOLOCK)
					WHERE	AA.UseYn = 'Y'
			]]>			
			<isNotEmpty property="MenuGroup">
				<![CDATA[
					AND		CASE 
								WHEN #MenuGroup# IN ('SYS','RDS','LIB') THEN AA.ParentID
								ELSE AA.ID
							END =	(	
										SELECT	CONVERT(INT, Value) 
										FROM	dbo.ACCode WITH (NOLOCK)
										WHERE	Code		= #MenuGroup#
										AND		ParentCode	= 'MenuGroup'
										AND		Value		IS NOT NULL
									)
				]]>
			</isNotEmpty>
			<isEmpty property="MenuGroup">
				<isNotEmpty property="ID">
					<![CDATA[
						AND		AA.ID = #ID#
					]]>
				</isNotEmpty>
				<isEmpty property="ID">
					<![CDATA[
						AND		AA.ParentID IS NULL
					]]>
				</isEmpty>
			</isEmpty>
			<![CDATA[
					UNION ALL
					SELECT	AA.ID				AS MenuID
						,	BB.MenuLevel + 1	AS MenuLevel
						,	CAST(BB.HierID+ '-' + 
								 RIGHT('0000' + 
									CONVERT(VARCHAR, 
										ROW_NUMBER() OVER (ORDER BY AA.SortOrder, AA.ID)), 4) AS VARCHAR(MAX))	AS HierID
					FROM	dbo.AAMenu AA WITH (NOLOCK)
							INNER JOIN 
								MenuList BB 
									ON AA.ParentID = BB.MenuID
					WHERE	AA.UseYn = 'Y'
				)
				SELECT	AA.ID			as MenuID
					,	AA.ParentId		as ParentID
					,	AA.MenuName		as MenuName
					,	BB.MenuLevel	as MenuLevel
					,	BB.HierId		as HierID
					,	FF.Assembly		as Assembly
					,	DD.Namespace	as Namespace
					,	DD.Instance		as Instance
					,	DD.ViewType		as ViewType
					,	'N'				AS BookmarkYn
					,	ISNULL((	SELECT	COUNT(*)
									FROM	dbo.AAMenu BB
									WHERE	BB.ParentID = AA.ID), 0)	AS ChildCount
					,	CASE 
							WHEN DD.ID IS NULL THEN 'N'
							ELSE 'Y'
						END				AS ViewYn
					,	'N'				AS EditYn
				FROM	dbo.AAMenu AA WITH (NOLOCK)
						INNER JOIN 
							MenuList BB 
								ON AA.ID = BB.MenuID
						LEFT JOIN
							dbo.AAMenuView CC WITH (NOLOCK)
								ON AA.ID = CC.MenuID
						LEFT JOIN
							dbo.AAView DD WITH (NOLOCK)
								ON CC.ViewID = DD.ID
						LEFT JOIN
							dbo.AAModule FF WITH (NOLOCK)
								ON DD.ModuleID = FF.ID
				WHERE	1=1
				ORDER BY 
					BB.HierID
			]]>
		</select>
		<select id="GetMenuView" parameterClass="DataMap" resultClass="UMMenuView">
			<![CDATA[
				SELECT	AA.ID			as MenuID
					,	AA.MenuName		as MenuName
					,	CC.ID			as ViewID
					,	CC.ViewName		as ViewName
					,	CC.ViewType		as ViewType
					,	EE.Assembly		as Assembly
					,	CC.Namespace	as Namespace
					,	CC.Instance		as Instance
				FROM	dbo.AAMenu AA WITH (NOLOCK)
						INNER JOIN
							dbo.AAMenuView BB WITH (NOLOCK)
								ON AA.ID = BB.MenuID
						INNER JOIN
							dbo.AAView CC WITH (NOLOCK)
								ON BB.ViewID = CC.ID
						INNER JOIN
							dbo.AAModule EE WITH (NOLOCK)
								ON CC.ModuleID = EE.ID
				WHERE	AA.ID = #ID#
			]]>
		</select>
		<select id="GetMenuViewButton" parameterClass="DataMap" resultClass="UMMenuViewButton">
			<![CDATA[
				SELECT	AA.ID			as ButtonID
					,	AA.ButtonName	as ButtonName
					,	AA.Instance		as Instance
				FROM	dbo.AAButton AA WITH (NOLOCK)	
						INNER JOIN
							dbo.AAViewButton BB WITH (NOLOCK)
								ON AA.ID = BB.ButtonID
						INNER JOIN
							dbo.AAMenuView CC WITH (NOLOCK)
								ON BB.ViewID = CC.ViewID
				WHERE	CC.MenuID = #ID#
				ORDER BY 
					AA.ID
			]]>
		</select>
		<select id="GetDictionary" parameterClass="DataMap" resultClass="UMCodeValue">
			<![CDATA[
				SELECT	AA.PhysicalName	as Code
					,	AA.LogicalName	as Value
				FROM	dbo.ACDictionary AA WITH (NOLOCK)	
				WHERE	AA.LanguageCode = #LanguageCode#
				ORDER BY 
					AA.PhysicalName
			]]>
		</select>
		<select id="GetMessage" parameterClass="DataMap" resultClass="UMCodeValue">
			<![CDATA[
				SELECT	AA.PhysicalName	as Code
					,	AA.LogicalName	as Value
				FROM	dbo.ACMessage AA WITH (NOLOCK)
				WHERE	AA.LanguageCode = #LanguageCode#
				ORDER BY 
					AA.PhysicalName
			]]>
		</select>
	</statements>
</sqlMap>