<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
	namespace="IKaan.Was.Core.SqlMaps"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLColumn-instance" >

	<statements>
		<select id="SelectADColumn" parameterClass="DataMap" resultClass="ADColumn" >
			<![CDATA[
				SELECT	ROW_NUMBER() OVER (ORDER BY AA.SortOrder)	AS RowNo
					,	AA.ID
					,	AA.CreateDate
					,	AA.CreateBy
					,	AA.CreateByName
					,	AA.UpdateDate
					,	AA.UpdateBy
					,	AA.UpdateByName
					
					,	AA.TableID
					,	AA.PhysicalName
					,	AA.LogicalName
					,	AA.Description
					,	AA.DataType
					,	AA.NullYn
					,	AA.PkYn
					,	AA.FkYn
					,	AA.IdentityYn
					,	AA.DefaultValue
					,	AA.SortOrder
				FROM	dbo.ADColumn AA WITH (NOLOCK)
				WHERE	1=1
			]]>
			<isNotEmpty property="FindText">
				<![CDATA[
					AND		(
								AA.PhysicalName	LIKE '%'+#FindText#+'%'	OR
								AA.LogicalName	LIKE '%'+#FindText#+'%'
							)
				]]>
			</isNotEmpty>
			<isNotEmpty property="TableID">
				<![CDATA[
					AND		AA.TableID = #TableID#
				]]>
			</isNotEmpty>
			<isNotEmpty property="ID">
				<![CDATA[
					AND		AA.ID = #ID#
				]]>
			</isNotEmpty>
			<![CDATA[
				ORDER BY 
					ROW_NO
			]]>
		</select>

		<select id="SelectADColumnByMSSQL" parameterClass="DataMap" resultClass="ADColumn" >
			<![CDATA[
				SELECT  ROW_NUMBER() OVER (ORDER BY XX.ColumnId)	AS RowNo
					,	YY.ID
					,	YY.CreateDate
					,	YY.CreateBy
					,	YY.CreateByName
					,	YY.UpdateDate
					,	YY.UpdateBy
					,	YY.UpdateByName
					
					,	CONVERT(VARCHAR, XX.TABLE_ID)		AS TableID
					,	XX.TableName						AS TableName
					,	XX.ColumnID							AS ColumnID
					,	XX.ColumnName						AS PhysicalName
					,	ISNULL(XX.[DESC], YY.LogicalName)	AS LogicalName
					,	YY.Description						AS Description
					,	UPPER(XX.[TYPE]) + 
						CASE 
							WHEN XX.LENGTH <> '' THEN 
								'(' +	
								CASE 
									WHEN XX.LENGTH = '-1' THEN 'MAX' 
									ELSE UPPER(XX.LENGTH) 
								END + 
								')' 
							ELSE '' 
						END									AS DataType
					,	XX.PkYn								AS PkYn
					,	XX.Nullable							AS NullYn
					,	XX.IdentityYn						AS IdentityYn
					,	XX.DefaultValue						AS DefaultValue
				FROM (
						SELECT  SC.OBJECT_ID		AS TableID
							,	ST.NAME				AS TableName
							,	SC.COLUMN_ID		AS ColumnID 
							,	SC.NAME				AS ColumnName
							,	CASE 
									WHEN STY.SYSTEM_TYPE_ID = STY.USER_TYPE_ID THEN 
										STY.NAME 
									ELSE 
										(	SELECT	NAME 
											FROM	SYS.TYPES S2 
											WHERE	S2.SYSTEM_TYPE_ID = STY.SYSTEM_TYPE_ID 
											AND		S2.SYSTEM_TYPE_ID = S2.USER_TYPE_ID ) 
								  END					AS [Type] 
							,	CASE 
									WHEN STY.NAME IN ('CHAR','VARCHAR') THEN 
										CONVERT(NVARCHAR(30), SC.MAX_LENGTH) 
								    WHEN STY.NAME IN ('NCHAR','NVARCHAR') THEN 
										CONVERT(NVARCHAR(30), SC.MAX_LENGTH/2) 
									ELSE '' 
								END						AS [Len1] 
							,	CASE 
									WHEN SC.IS_NULLABLE = 1 THEN 'Y' 
									ELSE 'N' 
								END						AS [Nullable]
							,	CASE 
									WHEN ISNULL(SD.DEFINITION, '') = '' THEN '' 
									ELSE SD.DEFINITION 
								END						AS [DefaultValue] 
							,	CASE 
									WHEN SC.IS_IDENTITY = 1 THEN 'Y' 
									ELSE 'N' 
								END						AS [IdentityYn] 
							,	CONVERT(NVARCHAR(200), CCM.VALUE) AS [DESC] 
							,	SC.COLLATION_NAME 
							,	SC.MAX_LENGTH 
							,	CASE 
									WHEN ZZ.COLUMN_NAME IS NOT NULL THEN 'Y' 
									ELSE '' 
								END						AS [PkYn] 
							,	SC2.LENGTH
							,	SC2.COLUMN_DEFAULT
						FROM	SYS.TABLES ST  
								INNER JOIN 
									SYS.COLUMNS SC 
										ON ST.OBJECT_ID = SC.OBJECT_ID 
								INNER JOIN 
									SYS.TYPES STY 
										ON STY.SYSTEM_TYPE_ID = SC.SYSTEM_TYPE_ID 
											AND STY.USER_TYPE_ID = SC.USER_TYPE_ID 
								LEFT JOIN 
								(
									SELECT	MAJOR_ID
										,	MINOR_ID
										,	VALUE  
									FROM	SYS.EXTENDED_PROPERTIES 
									WHERE	CLASS = 1 
								) CCM 
									ON SC.OBJECT_ID = CCM.MAJOR_ID 
										AND SC.COLUMN_ID = CCM.MINOR_ID 
								LEFT JOIN 
								(
									SELECT	PARENT_OBJECT_ID
										,	PARENT_COLUMN_ID
										,	DEFINITION  
									FROM	SYS.DEFAULT_CONSTRAINTS 
								) SD 
									ON SC.OBJECT_ID = SD.PARENT_OBJECT_ID 
										AND SC.COLUMN_ID = SD.PARENT_COLUMN_ID  
								LEFT JOIN 
									INFORMATION_SCHEMA.KEY_COLUMN_USAGE ZZ 
										ON ST.NAME = ZZ.TABLE_NAME 
											AND SC.NAME = ZZ.COLUMN_NAME 
            					LEFT JOIN 
								( 
									SELECT	TABLE_NAME
										,	COLUMN_NAME
										,	DATA_TYPE
										,	CASE 
												WHEN DATA_TYPE IN ( 'CHAR', 'VARCHAR', 'NCHAR', 'NVARCHAR' ) THEN 
													LTRIM(STR(CHARACTER_MAXIMUM_LENGTH))
            									WHEN DATA_TYPE = 'DECIMAL' THEN 
													LTRIM(STR(NUMERIC_PRECISION)) + ',' + LTRIM(STR(NUMERIC_SCALE))
            									WHEN DATA_TYPE = 'DATETIME' THEN ''
            									ELSE '' 
											END					AS LENGTH
										,	COLUMN_DEFAULT
            						FROM	INFORMATION_SCHEMA.COLUMNS 
								) SC2 
									ON ST.NAME = SC2.TABLE_NAME 
										AND SC.NAME = SC2.COLUMN_NAME
						WHERE ST.NAME = #TableName#
					) XX
					LEFT JOIN
						dbo.ADTable TT
							ON XX.TABLE_NAME = TT.TableName
								AND TT.DatabaseId = #DatabaseId#
					LEFT JOIN 
						dbo.ADColumn YY 
							ON TT.ID = YY.TableID
								AND XX.ColumnName = YY.PhysicalName
				ORDER BY 
					ROW_NO
			]]>
		</select>
		<select id="SelectADColumnByMYSQL" parameterClass="DataMap" resultClass="ADColumn" >
			<![CDATA[
				SELECT	ROW_NUMBER() OVER (ORDER BY AA.ORDINAL_POSITION)	AS RowNo
					,	CC.ID
					,	CC.CreateDate
					,	CC.CreateBy
					,	CC.CreateByName
					,	CC.UpdateDate
					,	CC.UpdateBy
					,	CC.UpdateByName
					
					,	BB.TABLE_TYPE + ' ' + BB.TABLE_NAME					AS TableID
					,	AA.TABLE_NAME										AS TableName
					,	AA.ORDINAL_POSITION									AS ColumnID
					,	AA.COLUMN_NAME										AS PhysicalName
					,	ISNULL(AA.COLUMN_COMMENT, CC.DESCRIPTION)			AS LogicalName
					,	CC.Description										AS Description
					,	AA.COLUMN_TYPE										AS DataTypeLen
					,	AA.DATA_TYPE										AS DataType
					,	AA.CHARACTER_MAXIMUM_LENGTH							AS DataLength
					,	CASE 
							WHEN AA.COLUMN_KEY = 'PRI' THEN 'Y' 
							ELSE 'N' 
						END													AS PkYn
					,	CASE 
							WHEN AA.IS_NULLABLE = 'NO' THEN 'N' 
							ELSE 'Y' 
						END													AS NullYn
					,	NULL												AS IdentityYn
					,	NULL												AS DefaultValue
				FROM	INFORMATION_SCHEMA.COLUMNS AA
						INNER JOIN 
							INFORMATION_SCHEMA.TABLES BB 
								ON AA.TABLE_NAME = BB.TABLE_NAME 
									AND AA.TABLE_SCHEMA = BB.TABLE_SCHEMA
						LEFT JOIN
							dbo.ADTable DD
								ON AA.TABLE_NAME = DD.TableName
									AND DD.DatabaseID = #DatabaseID#
						LEFT JOIN
							dbo.ADColumn CC
								ON DD.ID = CC.TableID
									AND AA.COLUMN_NAME = CC.PhysicalName
				WHERE	AA.TABLE_NAME	= #TableName#
				AND		AA.TABLE_SCHEMA	= #SchemaName#
				ORDER BY 
					ROW_NO
			]]>
		</select>

		<insert id="InsertADColumn" parameterClass="ADColumn" >
			<![CDATA[
				INSERT INTO dbo.ADColumn
				( 
					CreateDate, CreateBy, CreateByName,
					TableID, PhysicalName, LogicalName, Description, 
					DataType, NullYn, PkYn, FkYn, IdentityYn, DefaultValue, SortOrder
				)
				VALUES
				( 
					GetDate(), #CreateBy#, #CreateByName#,
					#TableID#, #PhysicalName#, #LogicalName#, #Description#, 
					#DataType#, #NullYn#, #PkYn#, #FkYn#, #IdentityYn#, #DefaultValue#, #SortOrder#
				)
			]]>
			<selectKey type="post" property="ID" resultClass="Int">
				<![CDATA[
					SELECT @@IDENTITY AS ID
				]]>
			</selectKey>
		</insert>
		<update id="UpdateADColumn" parameterClass="ADColumn">
			<![CDATA[
				UPDATE  dbo.ADColumn
				SET     UpdateDate		= #UpdateDate#
					,	UpdateBy		= #UpdateBy#
					,	UpdateByName	= #UpdateByName#
					
					,	PhysicalName	= #PhysicalName#
					,	LogicalName		= #LogicalName#
					,	Description		= #Description#
					,	DataType		= #DataType#
					,	NullYn			= #NullYn#
					,	PkYn			= #PkYn#
					,	FkYn			= #FkYn#
					,	IdentityYn		= #IdentityYn#
					,	DefaultValue	= #DefaultValue#
					,	SortOrder		= #SortOrder#
				WHERE	ID				= #ID#
			]]>
		</update>
		<delete id="DeleteADColumn" parameterClass="DataMap">
			<![CDATA[
				DELETE 
				FROM	dbo.ADColumn
				WHERE	ID = #ID#
			]]>
		</delete>
	</statements>
</sqlMap>