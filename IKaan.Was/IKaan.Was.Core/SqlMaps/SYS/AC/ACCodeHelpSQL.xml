<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
	namespace="IKaan.Was.Core.SqlMaps"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

	<statements>
		<select id="SelectCodeHelpCode" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	AA.ID			as ID
					,	AA.Code			as Code
					,	AA.Name			as Name
					,	AA.Name			as ListName
					,	AA.Name			as DispName
					,	AA.Value		as Value
					,	AA.SortOrder	as SortOrder
					,	AA.CodeValue01	as Option1
					,	AA.CodeValue02	as Option2
					,	AA.CodeValue03	as Option3
					,	AA.CodeValue04	as Option4
					,	AA.CodeValue05	as Option5
					,	AA.CodeValue06	as Option6
					,	AA.CodeValue07	as Option7
					,	AA.CodeValue08	as Option8
					,	AA.CodeValue09	as Option9
				FROM	dbo.ACCode AA WITH (NOLOCK)
				WHERE	AA.ParentCode = #ParentCode#
			]]>
			<isNotEmpty property="UseYn">
				<![CDATA[
					AND	AA.UseYn = #UseYn#
				]]>
			</isNotEmpty>
			<isEmpty property="UseYn">
				<![CDATA[
					AND	AA.UseYn = 'Y'
				]]>
			</isEmpty>
			<![CDATA[
				ORDER BY 
					SortOrder, Name
			]]>
		</select>		
		<select id="SelectCodeHelpCodeGroup" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	AA.ID			as ID
					,	AA.Code			as Code
					,	AA.Name			as Name
					,	AA.Name			as ListName
					,	AA.Name			as DispName
					,	AA.Value		as Value
					,	AA.SortOrder	as SortOrder
					,	AA.CodeValue01	as Option1
					,	AA.CodeValue02	as Option2
					,	AA.CodeValue03	as Option3
					,	AA.CodeValue04	as Option4
					,	AA.CodeValue05	as Option5
					,	AA.CodeValue06	as Option6
					,	AA.CodeValue07	as Option7
					,	AA.CodeValue08	as Option8
					,	AA.CodeValue09	as Option9
				FROM	dbo.ACCode AA WITH (NOLOCK)
				WHERE	AA.ParentCode IS NULL
			]]>
			<isNotEmpty property="UseYn">
				<![CDATA[
					AND	AA.UseYn = #UseYn#
				]]>
			</isNotEmpty>
			<isEmpty property="UseYn">
				<![CDATA[
					AND	AA.UseYn = 'Y'
				]]>
			</isEmpty>
			<![CDATA[
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpMenuList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				WITH CTE (ID, Name, Path, ParentID, HierID, Level)
				AS
				(
					SELECT	AA.ID															as ID
						,	AA.MenuName														as Name
						,	CONVERT(VARCHAR(1000), AA.MenuName)								as Path
						,	AA.ParentID														as ParentID
						,	CONVERT(VARCHAR(1000), 
								RIGHT('000000' + CONVERT(VARCHAR, AA.SortOrder, AA.ID), 6))	as HierID
						,	1																as Level
					FROM	dbo.AAMenu aa
					WHERE	AA.ParentID IS NULL
					AND		AA.UseYn = 'Y'
					UNION ALL
					SELECT	AA.ID															as ID
						,	AA.MenuName														as Name
						,	CONVERT(VARCHAR(1000), bb.Path + ' ▶ ' + AA.MenuName)			as Path
						,	AA.ParentID														as ParentID
						,	CONVERT(VARCHAR(1000), 
								bb.HierID + '-' + 
								RIGHT('000000'+CONVERT(VARCHAR, AA.SortOrder, AA.ID), 6))	as HierID
						,	bb.Level + 1													as Level
					FROM	dbo.AAMenu aa
							INNER JOIN 
								CTE bb 
									on AA.ParentID = bb.ID
					WHERE	AA.UseYn = 'Y'
				)
				SELECT	aa.ID									as ID					
					,	CONVERT(VARCHAR, aa.ID)					as Code
					,	aa.Name									as Name
					,	REPLICATE(' ', (aa.Level -1) * 5) + 
						CASE
							WHEN aa.Level > 1 then '▶'
							ELSE ''
						END + 
						aa.Name									as ListName
					,	aa.Path									as DispName
					,	CONVERT(VARCHAR, aa.ID)					as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.HierID)	as SortOrder
					,	aa.ID									as Option1
					,	aa.HierID								as Option2
					,	null									as Option3
					,	null									as Option4
					,	null									as Option5
					,	null									as Option6
					,	null									as Option7
					,	null									as Option8
					,	null									as Option9
				FROM	CTE aa
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpViewList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				WITH CTE (ID, Name, Path, ParentID, HierID, Level)
				AS
				(
					SELECT	AA.ID												as ID
						,	AA.ViewName											as Name
						,	CONVERT(VARCHAR(1000), AA.ViewName)					as Path
						,	AA.ParentID											as ParentID
						,	CONVERT(VARCHAR(1000), 
								RIGHT('000000' + CONVERT(VARCHAR, AA.ID), 6))	as HierID
						,	1													as Level
					FROM	dbo.AAView aa
					WHERE	AA.ParentID IS NULL
					AND		AA.UseYn = 'Y'
					UNION ALL
					SELECT	AA.ID													as ID
						,	AA.ViewName												as Name
						,	CONVERT(VARCHAR(1000), bb.Path + ' ▶ ' + AA.ViewName)	as Path
						,	AA.ParentID												as ParentID
						,	CONVERT(VARCHAR(1000), 
								bb.HierID + '-' + 
								RIGHT('000000'+CONVERT(VARCHAR, AA.ID), 6))			as HierID
						,	bb.Level + 1											as Level
					FROM	dbo.AAView aa
							INNER JOIN 
								CTE bb 
									on AA.ParentID = bb.ID
					WHERE	AA.UseYn = 'Y'
				)
				SELECT	aa.ID									as ID
					,	CONVERT(VARCHAR, aa.ID)					as Code
					,	aa.Name									as Name
					,	REPLICATE(' ', (aa.Level -1) * 5) + 
						CASE
							WHEN aa.Level > 1 THEN '▶'
							ELSE ''
						END + 
						aa.Name									as ListName
					,	aa.Path									as DispName
					,	CONVERT(VARCHAR, aa.ID)					as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.HierID)	as SortOrder
					,	aa.ID									as Option1
					,	aa.HierID								as Option2
					,	null									as Option3
					,	null									as Option4
					,	null									as Option5
					,	null									as Option6
					,	null									as Option7
					,	null									as Option8
					,	null									as Option9
				FROM	CTE aa
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpModuleList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	aa.ID								as ID
					,	CONVERT(VARCHAR, aa.ID)				as Code
					,	aa.ModuleName						as Name
					,	aa.ModuleName						as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.ID)	as SortOrder
					,	null								as Option1
					,	null								as Option2
					,	null								as Option3
					,	null								as Option4
					,	null								as Option5
					,	null								as Option6
					,	null								as Option7
					,	null								as Option8
					,	null								as Option9
				FROM	dbo.AAModule aa
				WHERE	1=1
			]]>
			<isNotEmpty property="UseYn">
				<![CDATA[
					AND	AA.UseYn = #UseYn#
				]]>
			</isNotEmpty>
			<isEmpty property="UseYn">
				<![CDATA[
					AND	AA.UseYn = 'Y'
				]]>
			</isEmpty>
			<![CDATA[
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpRoleList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				WITH CTE (ID, Name, Path, ParentID, HierID, Level)
				AS
				(
					SELECT	AA.ID												as ID
						,	AA.RoleName											as Name
						,	CONVERT(VARCHAR(1000), AA.RoleName)					as Path
						,	AA.ParentID											as ParentID
						,	CONVERT(VARCHAR(1000), 
								RIGHT('000000' + CONVERT(VARCHAR, AA.ID), 6))	as HierID
						,	1													as Level
					FROM	dbo.AARole aa
					WHERE	AA.ParentID IS NULL
					AND		AA.UseYn = 'Y'
					UNION ALL
					SELECT	AA.ID													as ID
						,	AA.RoleName												as Name
						,	CONVERT(VARCHAR(1000), bb.Path + ' ▶ ' + AA.RoleName)	as Path
						,	AA.ParentID												as ParentID
						,	CONVERT(VARCHAR(1000), 
								bb.HierID + '-' + 
								RIGHT('000000'+CONVERT(VARCHAR, AA.ID), 6))			as HierID
						,	bb.Level + 1											as Level
					FROM	dbo.AARole aa
							INNER JOIN 
								CTE bb 
									on AA.ParentID = bb.ID
					WHERE	AA.UseYn = 'Y'
				)
				SELECT	aa.ID									as ID
					,	CONVERT(VARCHAR, aa.ID)					as Code
					,	REPLICATE(' ', (aa.Level -1) * 5) + 
						CASE
							WHEN aa.Level > 1 then '▶'
							ELSE ''
						END + 
						aa.Name									as Name
					,	aa.Name									as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.HierID)	as SortOrder
					,	aa.ID			as Option1
					,	aa.Path			as Option2
					,	null			as Option3
					,	null			as Option4
					,	null			as Option5
					,	null			as Option6
					,	null			as Option7
					,	null			as Option8
					,	null			as Option9
				FROM	CTE aa
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpGroupList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				WITH CTE (ID, Name, Path, ParentID, HierID, Level)
				AS
				(
					SELECT	AA.ID												as ID
						,	AA.GroupName										as Name
						,	CONVERT(VARCHAR(1000), AA.GroupName)				as Path
						,	AA.ParentID											as ParentID
						,	CONVERT(VARCHAR(1000), 
								RIGHT('000000' + CONVERT(VARCHAR, AA.ID), 6))	as HierID
						,	1													as Level
					FROM	dbo.AAGroup aa
					WHERE	AA.ParentID IS NULL
					AND		AA.UseYn = 'Y'
					UNION ALL
					SELECT	AA.ID														as ID
						,	AA.GroupName												as Name
						,	CONVERT(VARCHAR(1000), bb.Path + ' ▶ ' + AA.GroupName)		as Path
						,	AA.ParentID													as ParentID
						,	CONVERT(VARCHAR(1000), 
								bb.HierID + '-' + 
								RIGHT('000000'+CONVERT(VARCHAR, AA.ID), 6))	as HierID
						,	bb.Level + 1												as Level
					FROM	dbo.AAGroup aa
							INNER JOIN 
								CTE bb 
									on AA.ParentID = bb.ID
					WHERE	AA.UseYn = 'Y'
				)
				SELECT	aa.ID									as ID
					,	CONVERT(VARCHAR, aa.ID)					as Code
					,	REPLICATE(' ', (aa.Level -1) * 5) + 
						CASE
							WHEN aa.Level > 1 then '▶'
							ELSE ''
						END + 
						aa.Name									as Name
					,	aa.Name									as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.HierID)	as SortOrder
					,	aa.ID			as Option1
					,	aa.Path			as Option2
					,	null			as Option3
					,	null			as Option4
					,	null			as Option5
					,	null			as Option6
					,	null			as Option7
					,	null			as Option8
					,	null			as Option9
				FROM	CTE aa
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpHelpList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	aa.ID								as ID
					,	CONVERT(VARCHAR, aa.ID)				as Code
					,	aa.HelpName							as Name
					,	aa.HelpName							as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.ID)	as SortOrder
					,	aa.HelpType							as Option1
					,	null								as Option2
					,	null								as Option3
					,	null								as Option4
					,	null								as Option5
					,	null								as Option6
					,	null								as Option7
					,	null								as Option8
					,	null								as Option9
				FROM	dbo.AAHelp aa
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpServerList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	aa.ID								as ID
					,	CONVERT(VARCHAR, aa.ID)				as Code
					,	aa.ServerName						as Name
					,	aa.ServerName						as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.ID)	as SortOrder
					,	null								as Option1
					,	null								as Option2
					,	null								as Option3
					,	null								as Option4
					,	null								as Option5
					,	null								as Option6
					,	null								as Option7
					,	null								as Option8
					,	null								as Option9
				FROM	dbo.ADServer aa
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpDatabaseList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	aa.ID								as ID
					,	CONVERT(VARCHAR, aa.ID)				as Code
					,	aa.DatabaseName						as Name
					,	aa.DatabaseName						as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.ID)	as SortOrder
					,	aa.ServerID							as Option1
					,	aa.DbmsType							as Option2
					,	null								as Option3
					,	null								as Option4
					,	null								as Option5
					,	null								as Option6
					,	null								as Option7
					,	null								as Option8
					,	null								as Option9
				FROM	dbo.ADDatabase aa
				WHERE	1=1
			]]>
			<isNotEmpty property="ServerID">
				<![CDATA[
					AND		aa.ServerID = #ServerID#
				]]>
			</isNotEmpty>
			<![CDATA[
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpSchemaList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	aa.ID								as ID
					,	CONVERT(VARCHAR, aa.ID)				as Code
					,	aa.SchemaName						as Name
					,	aa.SchemaName						as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.ID)	as SortOrder
					,	bb.ServerID							as Option1
					,	aa.DatabaseID						as Option2
					,	null								as Option3
					,	null								as Option4
					,	null								as Option5
					,	null								as Option6
					,	null								as Option7
					,	null								as Option8
					,	null								as Option9
				FROM	dbo.ADSchema aa WITH (NOLOCK)
						LEFT JOIN
							dbo.ADDatabase bb WITH (NOLOCK)
								ON aa.DatabaseID = bb.ID
				WHERE	1=1
			]]>
			<isNotEmpty property="ServerID">
				<![CDATA[
					AND		bb.ServerID = #ServerID#
				]]>
			</isNotEmpty>
			<isNotEmpty property="DatabaseID">
				<![CDATA[
					AND		aa.DatabaseID = #DatabaseID#
				]]>
			</isNotEmpty>
			<![CDATA[
				ORDER BY 
					SortOrder, Name
			]]>
		</select>
		<select id="SelectCodeHelpTableList" parameterClass="DataMap" resultClass="UMCodeHelp" >
			<![CDATA[
				SELECT	aa.ID								as ID
					,	CONVERT(VARCHAR, aa.ID)				as Code
					,	aa.TableName						as Name
					,	aa.TableName						as Value
					,	ROW_NUMBER() OVER (ORDER BY aa.ID)	as SortOrder
					,	bb.ServerID							as Option1
					,	aa.DatabaseID						as Option2
					,	aa.SchemaID							as Option3
					,	null								as Option4
					,	null								as Option5
					,	null								as Option6
					,	null								as Option7
					,	null								as Option8
					,	null								as Option9
				FROM	dbo.ADTable aa WITH (NOLOCK)
						LEFT JOIN
							dbo.ADDatabase bb WITH (NOLOCK)
								ON aa.DatabaseID = bb.ID
				WHERE	1=1
			]]>
			<isNotEmpty property="ServerID">
				<![CDATA[
					AND		bb.ServerID = #ServerID#
				]]>
			</isNotEmpty>
			<isNotEmpty property="DatabaseID">
				<![CDATA[
					AND		aa.DatabaseID = #DatabaseID#
				]]>
			</isNotEmpty>
			<isNotEmpty property="SchemaID">
				<![CDATA[
					AND		aa.SchemaID = #SchemaID#
				]]>
			</isNotEmpty>
			<![CDATA[
				ORDER BY 
					SortOrder, Name
			]]>
		</select>

		<select id="SelectCodeLookup" parameterClass="DataMap" resultClass="UMCodeLookup" >
			<![CDATA[
				SELECT	AA.Code			as Code
					,	AA.Name			as Name
					,	AA.Name			as ListName
					,	AA.Name			as DispName
					,	AA.Value		as Value
					,	AA.ParentCode	as GroupCode
					,	AA.SortOrder	as SortOrder
					,	AA.CodeValue01	as Option1
					,	AA.CodeValue02	as Option2
					,	AA.CodeValue03	as Option3
					,	AA.CodeValue04	as Option4
					,	AA.CodeValue05	as Option5
					,	AA.CodeValue06	as Option6
					,	AA.CodeValue07	as Option7
					,	AA.CodeValue08	as Option8
					,	AA.CodeValue09	as Option9
				FROM	dbo.ACCode AA WITH (NOLOCK)
				WHERE	AA.ParentCode IS NOT NULL
				AND		AA.UseYn = 'Y'
				UNION ALL
				SELECT	AA.Code			as Code
					,	AA.Name			as Name
					,	AA.Name			as ListName
					,	AA.Name			as DispName
					,	AA.Value		as Value
					,	'CodeGroup'		as GroupCode
					,	AA.SortOrder	as SortOrder
					,	AA.CodeValue01	as Option1
					,	AA.CodeValue02	as Option2
					,	AA.CodeValue03	as Option3
					,	AA.CodeValue04	as Option4
					,	AA.CodeValue05	as Option5
					,	AA.CodeValue06	as Option6
					,	AA.CodeValue07	as Option7
					,	AA.CodeValue08	as Option8
					,	AA.CodeValue09	as Option9
				FROM	dbo.ACCode AA WITH (NOLOCK)
				WHERE	AA.ParentCode IS NULL
				AND		AA.UseYn = 'Y'
				ORDER BY GroupCode, SortOrder
			]]>
		</select>
	</statements>
</sqlMap>