<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
	namespace="IKaan.Was.Core.SqlMaps"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

	<statements>
		<select id="SelectGroupList" parameterClass="DataMap" resultClass="GroupModel" >
			<![CDATA[
				WITH CTE (ID, HierID, Level)
				AS
				(
					SELECT	AA.ID		as ID
						,	CAST(RIGHT('0000' + 
									CONVERT(VARCHAR, ROW_NUMBER() OVER (ORDER BY AA.ID)), 4) AS VARCHAR(MAX))	AS HierID
						,	1																					AS Level
					FROM	dbo.TGroup AA WITH (NOLOCK)
					WHERE	1=1
			]]>
			<isNotEmpty property="ParentID">
				<![CDATA[
					And	AA.ID = #ParentID#
				]]>
			</isNotEmpty>
			<isEmpty property="ParentID">
				<![CDATA[
					AND	AA.ParentID IS NULL
				]]>
			</isEmpty>
			<![CDATA[
					UNION ALL
					SELECT	AA.ID			as ID
						,	CAST(BB.HierID + 
								 RIGHT('0000' + CONVERT(VARCHAR, ROW_NUMBER() OVER (ORDER BY AA.ID)), 4) AS VARCHAR(MAX))	AS HierID
						,	BB.Level + 1																					AS Level
					FROM	dbo.TGroup AA WITH (NOLOCK)
							INNER JOIN 
								CTE BB 
									ON AA.ParentID = BB.ID
				)
				SELECT  ROW_NUMBER() OVER (ORDER BY BB.HierID)	AS RowNo
					,	AA.ID
					,	AA.CreatedOn
					,	AA.CreatedBy
					,	AA.CreatedByName
					,	AA.UpdatedOn
					,	AA.UpdatedBy
					,	AA.UpdatedByName
					
					,	AA.GroupName
					,	AA.ParentID
					,	AA.UseYn
					,	AA.Description
					
					,	BB.HierID
					,	REPLICATE(' ', (BB.Level -1) * 5) + 
						CASE 
							WHEN BB.Level > 1 THEN '▶'
							ELSE ''
						END + 
						AA.GroupName		AS HierName
					,	BB.Level			as GroupLevel
					
				FROM	dbo.TGroup AA WITH (NOLOCK)
						INNER JOIN 
							CTE BB 
								ON AA.ID = BB.ID
				WHERE	1=1				
			]]>
			<isNotEmpty property="FindText">
				<![CDATA[
					AND	AA.GroupName LIKE '%' + #FindText# + '%'
				]]>
			</isNotEmpty>
			<![CDATA[
				ORDER BY RowNo
			]]>
		</select>
		<select id="SelectGroup" parameterClass="DataMap" resultClass="GroupModel" >
			<![CDATA[
				SELECT  AA.ID
					,	AA.CreatedOn
					,	AA.CreatedBy
					,	AA.CreatedByName
					,	AA.UpdatedOn
					,	AA.UpdatedBy
					,	AA.UpdatedByName
					,	AA.GroupName
					,	AA.ParentID
					,	AA.UseYn
					,	AA.Description
				FROM	dbo.TGroup AA WITH (NOLOCK)
				WHERE	AA.ID = #ID#
			]]>
		</select>
		<insert id="InsertGroup" parameterClass="GroupModel" >
			<![CDATA[
				INSERT INTO dbo.TGroup
				( 
					CreatedOn, CreatedBy, CreatedByName,
					GroupName, ParentID, UseYn, Description
				)
				VALUES
				(
					GetDate(), #CreatedBy#, #CreatedByName#,
					#GroupName#, #ParentID#, #UseYn#, #Description#
				)
			]]>
			<selectKey type="post" property="ID" resultClass="Int">
				<![CDATA[
					SELECT @@IDENTITY AS ID
				]]>
			</selectKey>
		</insert>
		<update id="UpdateGroup" parameterClass="GroupModel">
			<![CDATA[
				UPDATE  dbo.TGroup
				SET     UpdatedOn	= GetDate()
					,	UpdatedBy	= #UpdatedBy#
					,	UpdatedByName= #UpdatedByName#
					
					,	GroupName	= #GroupName#
					,	ParentID	= #ParentID#
					,	UseYn		= #UseYn#
					,	Description	= #Description#
				WHERE	ID			= #ID#
			]]>
		</update>
		<delete id="DeleteGroup" parameterClass="DataMap">
			<![CDATA[
				DELETE FROM dbo.TGroupMenu WHERE GroupID = #ID#;
				DELETE FROM dbo.TGroupRole WHERE GroupID = #ID#;
				DELETE FROM dbo.TGroup 	   WHERE ID		 = #ID#;
			]]>
		</delete>

		<select id="SelectGroupRoleList" parameterClass="DataMap" resultClass="GroupRoleModel" >
			<![CDATA[
				WITH CTE (ID, HierID, Level)
				AS
				(
					SELECT	AA.ID		as ID
						,	CAST(RIGHT('0000' + 
									CONVERT(VARCHAR, 
										ROW_NUMBER() OVER 
											(ORDER BY AA.ID)), 4) AS VARCHAR(MAX))	as HierID
						,	1														as Level
					FROM	dbo.TRole AA WITH (NOLOCK)
					WHERE	AA.ParentID IS NULL
					AND		AA.UseYn = 'Y'
					UNION ALL
					SELECT	AA.ID			as ID
						,	CAST(BB.HierID + 
								 RIGHT('0000' + 
									CONVERT(VARCHAR, 
										ROW_NUMBER() OVER 
											(ORDER BY AA.ID)), 4) AS VARCHAR(MAX))	as HierID
						,	BB.Level + 1											as Level
					FROM	dbo.TRole AA WITH (NOLOCK)
							INNER JOIN 
								CTE BB 
									ON AA.ParentID = BB.ID
					WHERE	AA.UseYn = 'Y'
				)
				SELECT  ROW_NUMBER() OVER (ORDER BY AA.HierID)	AS RowNo
					,	CASE 
							WHEN GR.ID IS NULL THEN 'N'
							ELSE GR.UseYn
						END										AS Checked
					,	GR.ID
					,	GR.CreatedOn
					,	GR.CreatedBy
					,	GR.CreatedByName
					,	GR.UpdatedOn
					,	GR.UpdatedBy
					,	GR.UpdatedByName
					
					,	#ID#					as GroupID
					,	AA.ID					as RoleID
					,	ISNULL(GR.UseYn,'N')	as UseYn
					,	BB.RoleName				as RoleName
					
					,	AA.HierID
					,	REPLICATE(' ', (AA.Level -1) * 5) + 
						CASE 
							WHEN AA.Level > 1 THEN '▶'
							ELSE ''
						END + 
						BB.RoleName			AS HierName
					,	AA.Level			as RoleLevel
					
				FROM	CTE AA
						INNER JOIN
							dbo.TRole BB WITH (NOLOCK)
								ON AA.ID = BB.ID
						LEFT JOIN
							dbo.TGroupRole GR WITH (NOLOCK)
								ON AA.ID = GR.RoleID
									AND GR.GroupID = #ID#
				ORDER BY RowNo
			]]>
		</select>
		<select id="SelectGroupMenuList" parameterClass="DataMap" resultClass="GroupMenuModel" >
			<![CDATA[
				WITH CTE (ID, HierID, Level)
				AS
				(
					SELECT	AA.ID		as ID
						,	CAST(RIGHT('0000' + 
									CONVERT(VARCHAR, 
										ROW_NUMBER() OVER 
											(ORDER BY AA.SortOrder, AA.ID)), 4) AS VARCHAR(MAX))	as HierID
						,	1																		as Level
					FROM	dbo.TMenu AA WITH (NOLOCK)
					WHERE	AA.ParentID IS NULL
					AND		AA.UseYn = 'Y'
					UNION ALL
					SELECT	AA.ID			as ID
						,	CAST(BB.HierID + 
								 RIGHT('0000' + 
									CONVERT(VARCHAR, 
										ROW_NUMBER() OVER 
											(ORDER BY AA.SortOrder, AA.ID)), 4) AS VARCHAR(MAX))	as HierID
						,	BB.Level + 1															as Level
					FROM	dbo.TMenu AA WITH (NOLOCK)
							INNER JOIN 
								CTE BB 
									ON AA.ParentID = BB.ID
					WHERE	AA.UseYn = 'Y'
				)
				SELECT  ROW_NUMBER() OVER (ORDER BY AA.HierID)	AS RowNo
					,	CASE 
							WHEN GM.ID IS NULL THEN 'N'
							ELSE GM.UseYn
						END										AS Checked
					,	GM.ID
					,	GM.CreatedOn
					,	GM.CreatedBy
					,	GM.CreatedByName
					,	GM.UpdatedOn
					,	GM.UpdatedBy
					,	GM.UpdatedByName
					
					,	#ID#					as GroupID
					,	AA.ID					as MenuID
					,	ISNULL(GM.UseYn,'N')	as UseYn
					,	BB.MenuName				as MenuName
					
					,	AA.HierID				as HierID
					,	REPLICATE(' ', (AA.Level -1) * 5) + 
						CASE 
							WHEN AA.Level > 1 THEN '▶'
							ELSE ''
						END + 
						BB.MenuName				as HierName
					,	AA.Level				as MenuLevel
					
				FROM	CTE AA
						INNER JOIN
							dbo.TMenu BB WITH (NOLOCK)
								ON AA.ID = BB.ID
						LEFT JOIN
							dbo.TGroupMenu GM WITH (NOLOCK)
								ON AA.ID = GM.MenuID
									AND GM.GroupID = #ID#
				ORDER BY RowNo
			]]>
		</select>
	</statements>
</sqlMap>